

version: "2"

services:

  joplin-db:
    image: postgres:13
    container_name: joplin-db
    volumes:
     - ./joplin/data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
     - USER_UID=${USER_ID}
     - USER_GID=${GROUP_ID}
     - POSTGRES_PASSWORD=${JOPLIN_DB_PASSWORD}
     - POSTGRES_USER=joplin-user
     - POSTGRES_DB=joplindb

  joplin:
    image: joplin/server:2.10.10-beta
    container_name: joplin
    depends_on:
     - joplin-db
    restart: unless-stopped
    environment:
     - USER_UID=${USER_ID}
     - USER_GID=${GROUP_ID}
     - APP_BASE_URL=https://${HOST_JOPLIN}.${SERVER_NAME}
     - APP_PORT=8080
     - DB_CLIENT=pg
     - POSTGRES_PASSWORD=${JOPLIN_DB_PASSWORD}
     - POSTGRES_DATABASE=joplindb
     - POSTGRES_USER=joplin-user
     - POSTGRES_PORT=5432
     - POSTGRES_HOST=joplin-db
     - MAX_TIME_DRIFT=0

  trilium:
    image: zadam/trilium:0.59-latest
    container_name: trilium
    volumes:
     - ./trilium/data:/home/node/trilium-data
    environment:
     - USER_UID=${USER_ID}
     - USER_GID=${GROUP_ID}
    restart: unless-stopped

  vault:
    image: vaultwarden/server:1.28.1
    container_name: vaultwarden
    volumes:
     - ./vaultwarden/data:/data
     - ./vaultwarden/.env:/.env
    environment:
     - USER_UID=${USER_ID}
     - USER_GID=${GROUP_ID}
    restart: unless-stopped

  nginx:
    image: nginx:1.23.4
    container_name: nginx
    ports:
     - '80:80'
     - '443:443'
    volumes:
     - ./nginx/conf.d.templates:/etc/nginx/templates:ro
     - ./nginx/certs:/etc/certs:ro
    environment:
     - USER_UID=${USER_ID}
     - USER_GID=${GROUP_ID}
     - SERVER_NAME=${SERVER_NAME}
     - HOST_TRILIUM=${HOST_TRILIUM}
     - BACKEND_TRILIUM=http://${HOST_TRILIUM}:8080
     - HOST_JOPLIN=${HOST_JOPLIN}
     - BACKEND_JOPLIN=http://${HOST_JOPLIN}:8080
     - HOST_VAULT=${HOST_VAULT}
     - BACKEND_VAULT=http://${HOST_VAULT}:80
     - BACKEND_UPGRADE_VAULT=http://${HOST_VAULT}:3012
    depends_on:
     - ${HOST_TRILIUM}
     - ${HOST_JOPLIN}
     - ${HOST_VAULT}
    restart: unless-stopped

